// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UoWDemo.Persistence;

#nullable disable

namespace UoWDemo.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20221212114422_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("UoWDemo.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apartment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("POBox")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Addresses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apartment = "3",
                            City = "Lisboa",
                            Country = "Portuguese",
                            CreatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3738),
                            POBox = "1900-349",
                            PersonId = 1,
                            Street = "Yango Avenida, Quadra 25",
                            UpdatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3740)
                        },
                        new
                        {
                            Id = 2,
                            Apartment = "54",
                            City = "Faro",
                            Country = "Portuguese",
                            CreatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3742),
                            POBox = "1900-123",
                            PersonId = 2,
                            Street = "Braga Rua, Quadra 01",
                            UpdatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3744)
                        },
                        new
                        {
                            Id = 3,
                            Apartment = "",
                            City = "Albufeira",
                            Country = "Portuguese",
                            CreatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3746),
                            POBox = "1900-73",
                            PersonId = 3,
                            Street = "Moraes Alameda, Casa 2",
                            UpdatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3747)
                        });
                });

            modelBuilder.Entity("UoWDemo.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3512),
                            FirstName = "Jordan",
                            LastName = "Davila",
                            UpdatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3615)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3617),
                            FirstName = "Giovanni",
                            LastName = "Krueger",
                            UpdatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3618)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3620),
                            FirstName = "Marjorie",
                            LastName = "Nolan",
                            UpdatedAt = new DateTime(2022, 12, 12, 11, 44, 22, 538, DateTimeKind.Local).AddTicks(3621)
                        });
                });

            modelBuilder.Entity("UoWDemo.Entities.Address", b =>
                {
                    b.HasOne("UoWDemo.Entities.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("UoWDemo.Entities.Person", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
